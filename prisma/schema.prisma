datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

// models examples
model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  username  String
  password  String
  address   String  

  isAdmin  Boolean   @default(false)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  balance Float       @default(0)


  


  userLoans  UserLoan[]

  transactions Transaction[]

}

model Transaction {


  id        Int       @id @default(autoincrement())
  amount    Float
  type      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  userId Int 
  user User @relation(fields: [userId], references: [id])

}

enum LoanStatus{
  PENDING
  APPROVED
  REJECTED
  RETURNED
}

model UserLoan {


  id        Int       @id @default(autoincrement())
  userId    Int       
  user User @relation(fields: [userId], references: [id])
  bookId    Int
  book    Book       @relation(fields: [bookId], references: [id])


  loanExpiredAt DateTime 

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  price Int @default(0)

  status LoanStatus @default(PENDING)




}

model Book {

  id Int @id @default(autoincrement())

  title String

  cover String?

  authorId  Int 
  author Author @relation(fields: [authorId], references: [id])
  
  price Int @default(0)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories Category[] 

  UserLoan UserLoan[]
}


model Category{


  id Int @id @default(autoincrement())

  name String

  books Book[] 

}

model Author{

  id Int @id @default(autoincrement())

  name String

  books Book[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}